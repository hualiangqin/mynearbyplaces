{"version":3,"sources":["components/Review.js","ServerInterface/places.js","ServerInterface/server.js","components/Place.js","components/Home.js","components/AddReview.js","components/AddPlace.js","components/UpdatePlace.js","App.js","reportWebVitals.js","index.js"],"names":["Review","review","this","props","stars","review_comment","React","Component","places","id","name","city","state","type","reviews","comment","start","server","fetchPlaces","addPlace","n","c","s","t","place","console","log","push","add","removePlace","i","find","e","index","indexOf","splice","remove","updatePlace","p","update","addReview","r","addreview","Place","fillReviews","setState","showOrCollapseReviews","showReview","deletePlace","fetch","then","x","json","catch","dest","pathname","className","place_name","place_type","onClick","map","to","Home","handleChange","event","value","target","clickSearch","keywords","results","showAllPlace","body","length","maxLength","placeholder","onChange","AddReview","componentDidMount","location","submitReview","submitted","method","headers","JSON","stringify","preventDefault","onSubmit","AddPlace","submitPlace","UpdatePlace","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f76d0e19.chunk.js","sourcesContent":["import React from 'react';\n\nclass Review extends React.Component{\n\n    render(){\n        const { review } = this.props;\n        return(\n            <div>\n                <div>\n                    <div>Stars: {review.stars}</div>\n                    <div>Comment: {review.review_comment}</div>\n                    <br/>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Review;","let places =\n[\n    {\n        id: 1,\n        name: \"place1\",\n        city: \"tucson\",\n        state: \"AZ\",\n        type : \"restaurant\",\n        reviews:[\n            {\n                stars: 5,\n                comment: \"nice place\"        \n            },\n            {\n                stars: 2,\n                comment: \"will not come again\"\n            }\n        ]\n    },\n    {\n        id: 2,\n        name: \"place 3\",\n        city: \"tucson\",\n        state: \"AZ\",\n        type: \"shopping mall\",\n        reviews:[\n            {\n                stars: 1,\n                comment: \"too many people\"\n            },\n            {\n                stars: 4,\n                comment: \"have bought what I wanted\"\n            }\n        ]\n    },\n    {\n        id: 3,\n        name: \"place 8\",\n        city: \"tempe\",\n        state: \"AZ\",\n        type: \"dry cleaning\",\n        reviews: [\n            {\n                stars: 0,\n                comment: \"every dirty\"\n            }\n        ]\n    },\n    {\n        id: 4,\n        name: \"place 28\",\n        city: \"phoenix\",\n        state: \"AZ\",\n        type: \"barber\",\n        reviews: [\n            {\n                stars: 5,\n                comment: \"nice person!\"\n            }\n        ]\n    },\n    {\n        id: 5,\n        name: \"place 167\",\n        city: \"apache junction\",\n        state: \"AZ\",\n        type: \"grocery\",\n        reviews :[\n            {\n                stars: 4,\n                comment: \"have everything I needed\"\n            },\n            {\n                stars: 1,\n                comment: \"the vege is not fresh\"\n            }\n        ]\n    }\n]\n\nexport default places;","// import { rejects } from \"assert\";\n// import { resolve } from \"path\";\nimport places from './places';\nlet start = 5;\n\nlet add = (n, c, s, t) =>{\n    start++;\n    let i = start;\n    let place = {\n        id: i,\n        name: n,\n        city: c,\n        state: s,\n        type: t,\n        reviews: []\n    }\n    console.log(place);\n    places.push(place);\n    console.log(places);\n}\n\nlet remove = (i) =>{\n    console.log(\"remove: \"+i);\n    let place = places.find(e => e.id === i);\n    let index = places.indexOf(place);\n    places.splice(index, 1);\n}\n\nlet update = (i, p) =>{\n    let place = places.find(e => e.id === i);\n    if (p.name !== ''){\n        place.name = p.name;\n    }\n    if (p.city !== ''){\n        place.city = p.city;\n    }\n    if (p.state !== ''){\n        place.state = p.state;\n    }\n    if (p.type !== ''){\n        place.type = p.type;\n    }\n}\n\nlet addreview = (i, r) =>{\n    let place = places.find(e => e.id === i);\n    console.log(place);\n    console.log(r);\n    place.reviews.push(r);\n}\n\nlet server = {\n\n    fetchPlaces: () => {\n        return places;\n    },\n\n    addPlace: (name, city, state, type) => {\n        add(name, city, state, type);\n    },\n\n    removePlace: (i) => {\n        remove(i);\n    },\n\n    updatePlace: (i, p) => {\n        update(i, p);\n    },\n\n    addReview: (i, r) => {\n        addreview(i, r);\n    }\n};\n\nexport default server;","import React from 'react';\nimport Review from './Review';\nimport './Place.css';\nimport {\n    Link\n  } from \"react-router-dom\";\nimport server from '../ServerInterface/server';\n\nclass Place extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            showReview: false,\n            id: 0,\n            reviews: []\n        };\n    }\n\n    componentDidMount() {\n        const { place } = this.props;\n        let id = place.id;\n        let api = 'https://hualiangqin-nearbyplaces-api.herokuapp.com/reviews/' + id;\n        fetch(api).then(x => x.json()).then(reviews => {\n            this.setState({reviews: reviews});\n            console.log(reviews);\n        }).catch(e => console.log(e));\n    }\n\n    fillReviews = (r) => {\n        this.setState({reviews: r});\n    }\n\n    showOrCollapseReviews = () =>{\n        if (this.state.showReview){\n            this.setState({showReview: false});\n        }else{\n            this.setState({showReview: true});\n        }\n    }\n\n    deletePlace = (id) => {\n        server.removePlace(id);\n    }\n\n    render(){\n        const {reviews} = this.state;\n        const { place } = this.props;\n        let id = place.id;\n        let dest = {pathname: \"/addreview\", state: {id: id}}\n        // let update = {\n        //     pathname: \"/updateplace\",\n        //     state: {\n        //         place: place\n        //     }\n        // }\n        return(\n            <div className=\"places-container\">\n                <div>\n                    <div>Name: {place.place_name}</div>\n                    <div>Type: {place.place_type}</div>\n                    <div>City: {place.city}</div>\n                    <div>State: {place.state}</div>\n                </div>\n                {this.state.showReview ?\n                <p onClick={this.showOrCollapseReviews}>reviews: <i className=\"down\"></i></p>\n                :\n                <p onClick={this.showOrCollapseReviews}>reviews: <i className=\"right\"></i></p>\n                }\n                <br />\n                <div>\n                {this.state.showReview ? \n                reviews.map(r => <Review review={r}/>)\n                : ''}\n                </div>\n                <div className=\"modify-container\">\n                    <Link to={dest}>\n                        <button>Add Review</button>\n                    </Link>\n                    {/* <button onClick={() => this.deletePlace(id)}>Delete</button>\n                    <Link to={update}>\n                        <button>Update</button>\n                    </Link> */}\n                </div>\n            </div>\n        );\n    }\n}\nexport default Place;","import React from 'react';\nimport {\n    Link\n  } from \"react-router-dom\";\nimport './Home.css';\nimport Place from './Place';\n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            places: [],\n            keywords: \"\",\n            city: \"\",\n            results: []\n        };\n    }\n\n    componentDidMount() {\n        if (this.state.places.length === 0){\n            let api = 'https://hualiangqin-nearbyplaces-api.herokuapp.com/places';\n            fetch(api).then(x => x.json()).then(places => {\n                this.setState({places: places});\n                console.log(places);\n            }).catch(e => console.log(e));\n        }\n    }\n\n    handleChange = (event) =>{\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]: value});\n    }\n\n    clickSearch = () => {\n        console.log(\"click\");\n        console.log(this.state.keywords);\n        console.log(this.state.city);\n        const {keywords, city} = this.state;\n        \n        let api = 'https://hualiangqin-nearbyplaces-api.herokuapp.com/search/' + keywords + '/' +  city;\n        fetch(api).then(x => x.json()).then(places => {\n            this.setState({results: places});\n            console.log(places);\n        }).catch(e => console.log(e));\n    }\n\n    showAllPlace = () =>{\n        let places = this.state.places;\n        this.setState({results: places});\n    }\n\n    body = () => {\n        const {results} = this.state;\n        return (\n            <div className=\"results-container\">\n                {results.length>0 ? \n                results.map(p => <Place key={p.id} place={p}/>)\n                :\n                \"no results\"}\n            </div>\n        )\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div className=\"main\">\n                    <h1 className=\"homepage-title\">MyNearbyPlaces</h1>\n                    <div className=\"search-field\">\n                        <div className=\"input-wrapper\">\n                            <span>Find</span>\n                            <div className=\"inputboxes\">\n                                <input className=\"input\" maxLength=\"64\" placeholder=\"keyword\" name=\"keywords\" value={this.state.keywords} onChange={this.handleChange}></input>\n                                <input className=\"input\" maxLength=\"64\" placeholder=\"city\" name=\"city\" value={this.state.city} onChange={this.handleChange}></input>\n                            </div>\n                            <button onClick={this.clickSearch}>Search</button>\n                       \n                            <Link to='/addplace'>\n                                <button>Add Place</button>\n                            </Link>\n                            <button onClick={this.showAllPlace}>All Place</button>\n                        </div>\n                    </div>\n                </div>\n                {this.body()}\n            </div>\n        )\n    }\n}\nexport default Home;","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport server from '../ServerInterface/server';\n\nclass AddReview extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            stars: \"\",\n            comment: \"\",\n            id: 0,\n            submitted: false,\n        };\n    }\n\n    componentDidMount = () =>{\n        const location = this.props.location;\n        let id = 0;\n        if (location){\n            if(location.state){\n                id = location.state.id ? location.state.id : '';\n                console.log(id);\n                this.setState({id: id});\n            }\n        }\n    }\n\n    handleChange = (event) =>{\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]: value});\n    }\n\n    submitReview = (event) =>{\n        this.setState({submitted: true});\n        const id = this.state.id;\n\n        //more to go on\n        const {stars, comment} = this.state;\n        console.log(\"stars: \" + stars);\n        console.log(\"comment: \" + comment);\n        fetch('https://hualiangqin-nearbyplaces-api.herokuapp.com/review/' + id, \n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    stars: stars,\n                    review_comment: comment\n                })\n            }).then(x => console.log(x)).catch(e => console.log(e));\n        event.preventDefault();\n    }\n\n    render(){\n\n        if (this.state.submitted){\n            return(\n                <Redirect to='/mynearbyplaces'/>\n            );\n        }\n\n        return(\n            <form onSubmit={this.submitReview}>\n                <label>Stars: </label>\n                <input type=\"text\" name=\"stars\" value={this.state.stars} onChange={this.handleChange}></input>\n                <br />\n                <label>Comment: </label>\n                <input type=\"text\" name=\"comment\" value={this.state.comment} onChange={this.handleChange}></input>\n                <button type=\"submit\">submit</button>\n            </form>\n        );\n    }\n}\n\nexport default AddReview;","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport server from '../ServerInterface/server';\n\nclass AddPlace extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            name: \"\",\n            type: \"\",\n            state: \"\",\n            city: \"\",\n            submitted: false,\n        };\n    }\n\n    handleChange = (event) =>{\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]: value});\n    }\n\n    submitPlace = (event) =>{\n        this.setState({submitted: true});\n\n        const {name, type, city, state} = this.state;\n        console.log(\"name: \" + name);\n        console.log(\"type: \" + type);\n        console.log(\"city: \" + city);\n        console.log(\"state:\" + state);\n        fetch('https://hualiangqin-nearbyplaces-api.herokuapp.com/place', \n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    place_name : name,\n                    city: city,\n                    state: state,\n                    place_type: type\n                })\n            }).then(x => console.log(x)).catch(e => console.log(e));\n        event.preventDefault();\n    }\n\n    render(){\n        if (this.state.submitted){\n            return(\n                <Redirect to='/mynearbyplaces'/>\n            );\n        }\n\n        return(\n            <form onSubmit={this.submitPlace}>\n                <label>Name: </label>\n                <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange}></input>\n                <br />\n                <label>Type: </label>\n                <input type=\"text\" name=\"type\" value={this.state.type} onChange={this.handleChange}></input>\n                <br />\n                <label>City: </label>\n                <input type=\"text\" name=\"city\" value={this.state.city} onChange={this.handleChange}></input>\n                <br />\n                <label>State: </label>\n                <input type=\"text\" name=\"state\" value={this.state.state} onChange={this.handleChange}></input>\n                <br />\n                <button type=\"submit\">submit</button>\n            </form>\n        );\n    }\n}\n\nexport default AddPlace;","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport server from '../ServerInterface/server';\n\nclass UpdatePlace extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: 0,\n            name: \"\",\n            type: \"\",\n            state: \"\",\n            city: \"\",\n            reviews: [],\n            submitted: false,\n        };\n    }\n\n    componentDidMount = () =>{\n        const location = this.props.location;\n        if (location){\n            if(location.state){\n                if (location.state.place){\n                    let place = location.state.place;\n                    this.setState({\n                        id: place.id,\n                        name: place.name,\n                        type: place.type,\n                        state: place.state,\n                        city: place.city,\n                        reviews: place.reviews\n                    })\n                }\n            }\n        }\n    }\n\n    handleChange = (event) =>{\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]: value});\n    }\n\n    submitPlace = (event) =>{\n        this.setState({submitted: true});\n\n        const {id, name, type, city, state, reviews} = this.state;\n        let place = {\n            name: name,\n            type: type,\n            city: city,\n            state: state,\n            reviews: reviews\n        }\n        server.updatePlace(id, place);\n        //more to go on\n        event.preventDefault();\n    }\n\n    render(){\n        if (this.state.submitted){\n            return(\n                <Redirect to='/mynearbyplaces'/>\n            );\n        }\n\n        return(\n            <form onSubmit={this.submitPlace}>\n                <label>Name: </label>\n                <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange}></input>\n                <br />\n                <label>Type: </label>\n                <input type=\"text\" name=\"type\" value={this.state.type} onChange={this.handleChange}></input>\n                <br />\n                <label>City: </label>\n                <input type=\"text\" name=\"city\" value={this.state.city} onChange={this.handleChange}></input>\n                <br />\n                <label>State: </label>\n                <input type=\"text\" name=\"state\" value={this.state.state} onChange={this.handleChange}></input>\n                <br />\n                <button type=\"submit\">update</button>\n            </form>\n        );\n    }\n}\n\nexport default UpdatePlace;","import React from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport AddReview from './components/AddReview';\nimport AddPlace from './components/AddPlace';\nimport UpdatePlace from './components/UpdatePlace';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/mynearbyplaces' component={Home}/>\n        <Route path='/addreview' component={AddReview}/>\n        <Route path='/addplace' component={AddPlace}/>\n        <Route path='/updateplace' component={UpdatePlace}/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}