{"version":3,"sources":["ServerInterface/places.js","ServerInterface/server.js","components/Review.js","components/Place.js","components/Home.js","components/AddReview.js","components/AddPlace.js","components/UpdatePlace.js","App.js","reportWebVitals.js","index.js"],"names":["places","id","name","city","state","type","reviews","stars","comment","start","server","fetchPlaces","addPlace","n","c","s","t","place","console","log","push","add","removePlace","i","find","e","index","indexOf","splice","remove","updatePlace","p","update","addReview","r","addreview","Review","review","this","props","React","Component","Place","fillReviews","setState","showOrCollapseReviews","showReview","deletePlace","dest","pathname","className","onClick","map","to","Home","handleChange","event","value","target","clickSearch","keywords","_","require","keywordsArray","split","placeResults","length","kW","j","includes","some","item","isEqual","results","showAllPlace","body","maxLength","placeholder","onChange","AddReview","componentDidMount","location","submitReview","submitted","preventDefault","onSubmit","AddPlace","submitPlace","UpdatePlace","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32bfc5cd.chunk.js","sourcesContent":["let places =\n[\n    {\n        id: 1,\n        name: \"place1\",\n        city: \"tucson\",\n        state: \"AZ\",\n        type : \"restaurant\",\n        reviews:[\n            {\n                stars: 5,\n                comment: \"nice place\"        \n            },\n            {\n                stars: 2,\n                comment: \"will not come again\"\n            }\n        ]\n    },\n    {\n        id: 2,\n        name: \"place 3\",\n        city: \"tucson\",\n        state: \"AZ\",\n        type: \"shopping mall\",\n        reviews:[\n            {\n                stars: 1,\n                comment: \"too many people\"\n            },\n            {\n                stars: 4,\n                comment: \"have bought what I wanted\"\n            }\n        ]\n    },\n    {\n        id: 3,\n        name: \"place 8\",\n        city: \"tempe\",\n        state: \"AZ\",\n        type: \"dry cleaning\",\n        reviews: [\n            {\n                stars: 0,\n                comment: \"every dirty\"\n            }\n        ]\n    },\n    {\n        id: 4,\n        name: \"place 28\",\n        city: \"phoenix\",\n        state: \"AZ\",\n        type: \"barber\",\n        reviews: [\n            {\n                stars: 5,\n                comment: \"nice person!\"\n            }\n        ]\n    },\n    {\n        id: 5,\n        name: \"place 167\",\n        city: \"apache junction\",\n        state: \"AZ\",\n        type: \"grocery\",\n        reviews :[\n            {\n                stars: 4,\n                comment: \"have everything I needed\"\n            },\n            {\n                stars: 1,\n                comment: \"the vege is not fresh\"\n            }\n        ]\n    }\n]\n\nexport default places;","// import { rejects } from \"assert\";\n// import { resolve } from \"path\";\nimport places from './places';\nlet start = 5;\n\nlet add = (n, c, s, t) =>{\n    start++;\n    let i = start;\n    let place = {\n        id: i,\n        name: n,\n        city: c,\n        state: s,\n        type: t,\n        reviews: []\n    }\n    console.log(place);\n    places.push(place);\n    console.log(places);\n}\n\nlet remove = (i) =>{\n    console.log(\"remove: \"+i);\n    let place = places.find(e => e.id === i);\n    let index = places.indexOf(place);\n    places.splice(index, 1);\n}\n\nlet update = (i, p) =>{\n    let place = places.find(e => e.id === i);\n    if (p.name !== ''){\n        place.name = p.name;\n    }\n    if (p.city !== ''){\n        place.city = p.city;\n    }\n    if (p.state !== ''){\n        place.state = p.state;\n    }\n    if (p.type !== ''){\n        place.type = p.type;\n    }\n}\n\nlet addreview = (i, r) =>{\n    let place = places.find(e => e.id === i);\n    console.log(place);\n    console.log(r);\n    place.reviews.push(r);\n}\n\nlet server = {\n\n    fetchPlaces: () => {\n        return places;\n    },\n\n    addPlace: (name, city, state, type) => {\n        add(name, city, state, type);\n    },\n\n    removePlace: (i) => {\n        remove(i);\n    },\n\n    updatePlace: (i, p) => {\n        update(i, p);\n    },\n\n    addReview: (i, r) => {\n        addreview(i, r);\n    }\n};\n\nexport default server;","import React from 'react';\n\nclass Review extends React.Component{\n\n    render(){\n        const { review } = this.props;\n        return(\n            <div>\n                <div>\n                    <div>Stars: {review.stars}</div>\n                    <div>Comment: {review.comment}</div>\n                    <br/>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Review;","import React from 'react';\nimport Review from './Review';\nimport './Place.css';\nimport {\n    Link\n  } from \"react-router-dom\";\nimport server from '../ServerInterface/server';\n\nclass Place extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            showReview: false,\n            id: 0\n        };\n    }\n\n    fillReviews = (r) => {\n        this.setState({reviews: r});\n    }\n\n    showOrCollapseReviews = () =>{\n        if (this.state.showReview){\n            this.setState({showReview: false});\n        }else{\n            this.setState({showReview: true});\n        }\n    }\n\n    deletePlace = (id) => {\n        server.removePlace(id);\n    }\n\n    render(){\n        const { place } = this.props;\n        let id = place.id;\n        let dest = {pathname: \"/addreview\", state: {id: id}}\n        let update = {\n            pathname: \"/updateplace\",\n            state: {\n                place: place\n            }\n        }\n        return(\n            <div className=\"places-container\">\n                <div>\n                    <div>Name: {place.name}</div>\n                    <div>Type: {place.type}</div>\n                    <div>City: {place.city}</div>\n                    <div>State: {place.state}</div>\n                </div>\n                {this.state.showReview ?\n                <p onClick={this.showOrCollapseReviews}>reviews: <i className=\"down\"></i></p>\n                :\n                <p onClick={this.showOrCollapseReviews}>reviews: <i className=\"right\"></i></p>\n                }\n                <br />\n                <div>\n                {this.state.showReview ? \n                place.reviews.map(r => <Review review={r}/>)\n                : ''}\n                </div>\n                <div className=\"modify-container\">\n                    <Link to={dest}>\n                        <button>Add Review</button>\n                    </Link>\n                    <button onClick={() => this.deletePlace(id)}>Delete</button>\n                    <Link to={update}>\n                        <button>Update</button>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Place;","import React from 'react';\nimport {\n    Link\n  } from \"react-router-dom\";\nimport './Home.css';\nimport server from '../ServerInterface/server';\n// import places from '../ServerInterface/places';\nimport Place from './Place';\n\nclass Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            places: [],\n            keywords: \"\",\n            results: []\n        };\n    }\n\n    componentDidMount() {\n        if (this.state.places.length === 0){\n            const places = server.fetchPlaces();\n            this.setState({places: places})\n            console.log(places);\n        }\n    }\n\n    handleChange = (event) =>{\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]: value});\n    }\n\n    clickSearch = () => {\n        console.log(\"click\");\n        console.log(this.state.keywords);\n        const _ = require('lodash'); \n        const {keywords, places} = this.state;\n        let keywordsArray = keywords.split(\" \");\n        let placeResults = [];\n        for (let i=0; i<keywords.length; i++){\n            let kW = keywordsArray[i];\n            for (let j=0; j<places.length; j++){\n                let place = places[j];\n                let name = place.name;\n                let city = place.city;\n                let state = place.state;\n                let type = place.type;\n\n                if (name.includes(kW) || city.includes(kW) || state.includes(kW) || type.includes(kW)){\n                    if (placeResults.some(item => _.isEqual(item, place)) === false){\n                        placeResults.push(place);\n                    }\n                }\n            }\n        }\n        console.log(placeResults);\n        this.setState({results: placeResults})\n    }\n\n    showAllPlace = () =>{\n        let places = this.state.places;\n        this.setState({results: places});\n    }\n\n    body = () => {\n        const {results} = this.state;\n        return (\n            <div className=\"results-container\">\n                {results.length>0 ? \n                results.map(p => <Place key={p.id} place={p}/>)\n                :\n                \"no results\"}\n            </div>\n        )\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div className=\"main\">\n                    <h1 className=\"homepage-title\">MyNearbyPlaces</h1>\n                    <div className=\"search-field\">\n                        <div className=\"input-wrapper\">\n                            <span>Find</span>\n                            <input className=\"input\" maxLength=\"64\" placeholder=\"find my nearby places\" name=\"keywords\" value={this.state.keywords} onChange={this.handleChange}></input>\n                            <button onClick={this.clickSearch}>Search</button>\n                        </div>\n                        <Link to='/addplace'>\n                            <button>Add Place</button>\n                        </Link>\n                        <button onClick={this.showAllPlace}>All Place</button>\n                    </div>\n                </div>\n                {this.body()}\n            </div>\n        )\n    }\n}\nexport default Home;","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport server from '../ServerInterface/server';\n\nclass AddReview extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            stars: \"\",\n            comment: \"\",\n            id: 0,\n            submitted: false,\n        };\n    }\n\n    componentDidMount = () =>{\n        const location = this.props.location;\n        let id = 0;\n        if (location){\n            if(location.state){\n                id = location.state.id ? location.state.id : '';\n                console.log(id);\n                this.setState({id: id});\n            }\n        }\n    }\n\n    handleChange = (event) =>{\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]: value});\n    }\n\n    submitReview = (event) =>{\n        this.setState({submitted: true});\n        const id = this.state.id;\n\n        //more to go on\n        const {stars, comment} = this.state;\n        console.log(\"stars: \" + stars);\n        console.log(\"comment: \" + comment);\n        let review = {\n            stars: stars,\n            comment: comment\n        }\n        server.addReview(id, review);\n        event.preventDefault();\n    }\n\n    render(){\n\n        if (this.state.submitted){\n            return(\n                <Redirect to='/mynearbyplaces'/>\n            );\n        }\n\n        return(\n            <form onSubmit={this.submitReview}>\n                <label>Stars: </label>\n                <input type=\"text\" name=\"stars\" value={this.state.stars} onChange={this.handleChange}></input>\n                <br />\n                <label>Comment: </label>\n                <input type=\"text\" name=\"comment\" value={this.state.comment} onChange={this.handleChange}></input>\n                <button type=\"submit\">submit</button>\n            </form>\n        );\n    }\n}\n\nexport default AddReview;","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport server from '../ServerInterface/server';\n\nclass AddPlace extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            name: \"\",\n            type: \"\",\n            state: \"\",\n            city: \"\",\n            submitted: false,\n        };\n    }\n\n    handleChange = (event) =>{\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]: value});\n    }\n\n    submitPlace = (event) =>{\n        this.setState({submitted: true});\n\n        const {name, type, city, state} = this.state;\n        console.log(\"name: \" + name);\n        console.log(\"type: \" + type);\n        console.log(\"city: \" + city);\n        console.log(\"state:\" + state);\n        server.addPlace(name, city, state, type);\n        //more to go on\n        event.preventDefault();\n    }\n\n    render(){\n        if (this.state.submitted){\n            return(\n                <Redirect to='/mynearbyplaces'/>\n            );\n        }\n\n        return(\n            <form onSubmit={this.submitPlace}>\n                <label>Name: </label>\n                <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange}></input>\n                <br />\n                <label>Type: </label>\n                <input type=\"text\" name=\"type\" value={this.state.type} onChange={this.handleChange}></input>\n                <br />\n                <label>City: </label>\n                <input type=\"text\" name=\"city\" value={this.state.city} onChange={this.handleChange}></input>\n                <br />\n                <label>State: </label>\n                <input type=\"text\" name=\"state\" value={this.state.state} onChange={this.handleChange}></input>\n                <br />\n                <button type=\"submit\">submit</button>\n            </form>\n        );\n    }\n}\n\nexport default AddPlace;","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport server from '../ServerInterface/server';\n\nclass UpdatePlace extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id: 0,\n            name: \"\",\n            type: \"\",\n            state: \"\",\n            city: \"\",\n            reviews: [],\n            submitted: false,\n        };\n    }\n\n    componentDidMount = () =>{\n        const location = this.props.location;\n        if (location){\n            if(location.state){\n                if (location.state.place){\n                    let place = location.state.place;\n                    this.setState({\n                        id: place.id,\n                        name: place.name,\n                        type: place.type,\n                        state: place.state,\n                        city: place.city,\n                        reviews: place.reviews\n                    })\n                }\n            }\n        }\n    }\n\n    handleChange = (event) =>{\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]: value});\n    }\n\n    submitPlace = (event) =>{\n        this.setState({submitted: true});\n\n        const {id, name, type, city, state, reviews} = this.state;\n        let place = {\n            name: name,\n            type: type,\n            city: city,\n            state: state,\n            reviews: reviews\n        }\n        server.updatePlace(id, place);\n        //more to go on\n        event.preventDefault();\n    }\n\n    render(){\n        if (this.state.submitted){\n            return(\n                <Redirect to='/mynearbyplaces'/>\n            );\n        }\n\n        return(\n            <form onSubmit={this.submitPlace}>\n                <label>Name: </label>\n                <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange}></input>\n                <br />\n                <label>Type: </label>\n                <input type=\"text\" name=\"type\" value={this.state.type} onChange={this.handleChange}></input>\n                <br />\n                <label>City: </label>\n                <input type=\"text\" name=\"city\" value={this.state.city} onChange={this.handleChange}></input>\n                <br />\n                <label>State: </label>\n                <input type=\"text\" name=\"state\" value={this.state.state} onChange={this.handleChange}></input>\n                <br />\n                <button type=\"submit\">update</button>\n            </form>\n        );\n    }\n}\n\nexport default UpdatePlace;","import React from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport AddReview from './components/AddReview';\nimport AddPlace from './components/AddPlace';\nimport UpdatePlace from './components/UpdatePlace';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/mynearbyplaces' component={Home}/>\n        <Route path='/addreview' component={AddReview}/>\n        <Route path='/addplace' component={AddPlace}/>\n        <Route path='/updateplace' component={UpdatePlace}/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}